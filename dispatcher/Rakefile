require 'fileutils'

HACONIWA_VERSION = '160a1807c3f7daef17d2933acf7f337bf91ae4bb'

APP_NAME = ENV["APP_NAME"] || "dispatcher"
APP_ROOT = ENV["APP_ROOT"] || Dir.pwd
mruby_root = File.expand_path(ENV["MRUBY_ROOT"] || "#{APP_ROOT}/mruby")
haconiwa_root = File.expand_path(ENV["HACONIWA_ROOT"] || "#{APP_ROOT}/haconiwa")
mruby_config = File.expand_path(ENV["MRUBY_CONFIG"] || "build_config.rb")
ENV['MRUBY_ROOT'] = mruby_root
ENV['MRUBY_CONFIG'] = mruby_config

file :haconiwa do
  FileUtils.mkdir 'haconiwa'
  Dir.chdir(haconiwa_root) do
    sh <<-CMD
      git init
      git remote add origin https://github.com/haconiwa/haconiwa.git
      git fetch --no-tags origin +refs/heads/master
      git reset --hard -q #{HACONIWA_VERSION}
    CMD
    MRUBY_VERSION = File.read(File.expand_path "./mruby_version.lock", __FILE__).chomp
  end
end

file :mruby do
  FileUtils.mkdir 'mruby'
  Dir.chdir(mruby_root) do
    sh <<-CMD
      git init
      git remote add origin https://github.com/mruby/mruby.git
      git fetch --no-tags origin +refs/heads/master
      git reset --hard -q #{MRUBY_VERSION}
    CMD
  end
end

Rake::Task[:haconiwa].invoke unless Dir.exist?(haconiwa_root)
Rake::Task[:mruby].invoke unless Dir.exist?(mruby_root)

Dir.chdir(mruby_root)
load "#{mruby_root}/Rakefile"

desc "compile binary"
task :compile => [:all] do
  %W(#{mruby_root}/build/x86_64-pc-linux-gnu/bin/#{APP_NAME} #{mruby_root}/build/i686-pc-linux-gnu/#{APP_NAME}").each do |bin|
    sh "strip --strip-unneeded #{bin}" if File.exist?(bin)
  end
end

namespace :test do
  desc "run mruby & unit tests"
  task :mtest => :compile do
    MRuby.each_target do |target|
      target.enable_bintest = false
      run_test if target.test_enabled?
    end
  end

  def clean_env(envs)
    old_env = {}
    envs.each do |key|
      old_env[key] = ENV[key]
      ENV[key] = nil
    end
    yield
    envs.each do |key|
      ENV[key] = old_env[key]
    end
  end

  desc "run integration tests"
  task :bintest => :compile do
    MRuby.each_target do |target|
      clean_env(%w(MRUBY_ROOT MRUBY_CONFIG)) do
        run_bintest if target.bintest_enabled?
      end
    end
  end
end

desc "run all tests"
Rake::Task['test'].clear
task :test => ["test:mtest", "test:bintest"]

desc "cleanup"
task :clean do
  sh "rake deep_clean"
end
